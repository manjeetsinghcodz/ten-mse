### Initial Continuous integration.
### Checkout the code into ubuntu node, install the necessary packages required by python, and perform the test with pytest

name: Flask App Deployment

on:
  push:
    branches: [ "develop" ]
env:
   REGISTRY: dockermanjeet
   APP: app
   TAG: github.sha
jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Codes
      uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        export PYTHONPATH=app
        pytest

    - name: Setup QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set Up docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to docker hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASS }}

    - name: Build the docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        load: true
        tags: ${{ env.REGISTRY }}/${{ env.APP }}:${{ env.TAG }}

    - name: Test the container
      run: |
        docker run -it --rm -p 80:8080 ${{ env.REGISTRY }}/${{ env.APP }}:${{ env.TAG }} pytest;
        

    #- name: Push images
    #  uses: docker/build-push-action@v4
    #  with:
    #    context: .
    #    push: true
    #    tags: ${{ env.REGISTRY }}/${{ env.APP }}:${{ env.TAG }} */