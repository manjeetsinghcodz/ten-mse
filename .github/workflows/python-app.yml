### Initial Continuous integration.
### Checkout the code into ubuntu node, install the necessary packages required by python, and perform the test with pytest

name: Python application

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        export PYTHONPATH=app
        pytest
        
  docker:
    runs-on: ubuntu:latest
    steps:
      -
        name: Checkout Code
        uses: action/checkout@v3
      -
        name: Set Up QEMU
        uses: docker/setup-qemu-actions@v2
      -
        name: Set up docker BuildX
        uses: docker/setup-buildx-action@v2
      -
        name: Login to docker registry
        uses: docker/login-action@v2
        with:
          context: .
          load: true
          tags: app:latest
      -
        name: Test
        run: |
          docker run --rm app:latest
      -
        name: Build and push the images
        uses: docker/build-push-action@v4
        with:
          context:
            platforms: linux/amd64,linux/arm64
            push: true
            tags: app:latest

